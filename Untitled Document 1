package com.example;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;

public class Main {
    public static void main(String[] args) throws IOException {
        System.out.println("il client è partito");
        Socket s = new Socket("localhost", 3000);
        System.out.println("il client si è collegato");

        BufferedReader in = new BufferedReader(new InputStreamReader(s.getInputStream()));
        DataOutputStream out = new DataOutputStream(s.getOutputStream());
        BufferedReader inTastiera = new BufferedReader(new InputStreamReader(System.in));
        String messaggio;
        do {
            System.out.print("Inserisci il tuo messaggio: ");
            messaggio = inTastiera.readLine();
            if (messaggio.equals("exit")) {
                out.writeBytes("!\n");
                break;
            }
            out.writeBytes(messaggio + "\n");
            System.out.println("scegliere l'operazione da eseguire: M = maiuscolo, m = minuscolo, R = al contrario, C = lunghezza \n");
            messaggio = inTastiera.readLine();
            out.writeBytes(messaggio + "\n");
            String stringaElaborata = in.readLine();
            System.out.println(stringaElaborata);

        } while (true);
        
    }
}




package com.example;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class Main extends IOException {
    public static void main(String[] args) throws IOException {
        System.out.println("server avviato");
        ServerSocket s1 = new ServerSocket(3000);

        do{
            Socket s = s1.accept();
            System.out.println("un client si è collegato");
            MioThread t = new MioThread(s);
            t.start();
        } while(true);
    }
}


package com.example;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;

public class MioThread extends Thread {
    Socket s = new Socket();

    public MioThread(Socket s) {
        this.s = s;
    }

    public void run() {
        try {
            BufferedReader in = new BufferedReader(new InputStreamReader(s.getInputStream()));
            DataOutputStream out = new DataOutputStream(s.getOutputStream());
            String stringaRicevuta = "";
            while (true) {
                stringaRicevuta = in.readLine();
                System.out.println("La stringa ricevuta: " + stringaRicevuta);
                if (stringaRicevuta.equals("!"))
                    s.close();
                String stringaDaModificare = stringaRicevuta;
                stringaRicevuta = in.readLine();
                switch ((stringaRicevuta)) {
                    case "M":

                    stringaDaModificare = stringaDaModificare.toUpperCase();
                        break;

                    case "m":
                        stringaDaModificare = stringaDaModificare.toLowerCase();
                        break;

                    case "R":
                        char ch;
                        String invertita = "";
                        for (int i = 0; i < stringaDaModificare.length(); i++) {
                            ch = stringaDaModificare.charAt(i);
                            invertita = ch + invertita;
                        }
                        stringaDaModificare = invertita;
                        break;

                    case "C":
                        stringaDaModificare = stringaDaModificare.length() + "";
                        break;
                        
                    default:
                        stringaDaModificare = "La funzione inserita non esiste";
                }
                out.writeBytes(stringaDaModificare + "\n");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}









